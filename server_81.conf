    root /public;

    #access_log /var/log/nginx/access.log eb_log;

# warning: weirdness and hacks ahead to allow redirection on
# only the blog URLs
#                         _
# _._ _..._ .-',     _.._(`))
#'-. `     '  /-._.-'    ',/
#   )         \            '.
#  / _    _    |             \
# |  a    a    /              |
# \   .-.                     ;
#  '-('' ).-'       ,'       ;
#     '-;           |      .'
#        \           \    /
#        | 7  .__  _.-\   \
#        | |  |  ``/  /`  /
#       /,_|  |   /,_/   /
#          /,_/      '`-'
#

    set $test "notblog";

    if ($request_uri ~ ^/blogs) {
      set $test "blog";
    }

    set $test "${http_x_forwarded_proto}+${test}";

    if ($test = "https+blog") {
           rewrite ^(.*) http://$host$1 permanent;
           return 301;
    }

    if ($test = "http+notblog") {
           rewrite ^(.*) https://$host$1 permanent;
           return 301;
    }

    location @app {
      proxy_pass http://app;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Connection "";
      proxy_http_version 1.1;
    }

    location / {
      try_files $uri/index.html $uri.html $uri @app;
      error_page 404              /404.html;
      error_page 422              /422.html;
      error_page 500 502 503 504  /500.html;
      error_page 403              /403.html;
    }

    location ~* ^/assets/ {
      try_files $uri @app;
      # Per RFC2616 - 1 year maximum expiry
      expires 1y;
      add_header Cache-Control public;

      # Some browsers still send conditional-GET requests if there's a
      # Last-Modified header or an ETag header even if they haven't
      # reached the expiry date sent in the Expires header.
      add_header Last-Modified "";
      add_header ETag "";
      break;
    }
